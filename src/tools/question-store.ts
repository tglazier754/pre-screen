import { existsSync, mkdirSync } from 'fs';
import { writeFile } from 'fs/promises';
import path from 'path';
import { readFile } from 'fs/promises';
import { Question } from '@/types/questions-file';

export async function loadQuestions(id: string): Promise<Question[]> {
    try {
        const file = await readFile(getQuestionsFile(id), 'utf8');
        return JSON.parse(file);
    }
    catch {
        return JSON.parse("[]");
    }
}

export async function createQuestions(id: string): Promise<string> {
    //id should already be generated by the chat file
    await writeFile(getQuestionsFile(id), '[]'); // create an empty questions file
    return id;
}

function getQuestionsFile(id: string): string {
    const questionsDir = path.join(process.cwd(), '.questions');
    if (!existsSync(questionsDir)) {
        mkdirSync(questionsDir, { recursive: true });
    }
    return path.join(questionsDir, `${id}.json`);
}

export async function saveQuestions({
    id,
    questions,
}: {
    id: string;
    questions: Question[];
}): Promise<void> {
    const content = JSON.stringify(questions, null, 2);
    await writeFile(getQuestionsFile(id), content);
}
